import java.nio.file.Paths

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    // ndkVersion "23.0.7196353"
    compileSdkVersion 30
    buildToolsVersion "30.0.3"
    defaultConfig {
        applicationId "com.coderstory.flyme"
        minSdkVersion 26
        targetSdkVersion 28
        resConfigs "zh", "xxhdpi"
        versionCode 505
        versionName "4.4.6 测试版"
        resConfigs "cn"
        ndk {
            abiFilters 'arm64-v8a'
        }
    }

    signingConfigs {
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            zipAlignEnabled true
            pseudoLocalesEnabled true
        }

    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    externalNativeBuild {
        cmake {
            path file('CMakeLists.txt')
        }
    }
    applicationVariants.all { variant ->
        variant.javaCompileProvider.get().doLast {
            runAllatori(variant)
        }
        variant.outputs.all { output ->
            outputFileName = "FlymeHelper-${defaultConfig.versionName}-${defaultConfig.versionCode}-${buildType.name}.apk"
        }
    }
}

def runAllatori(variant) {
    copy {
        from "$projectDir/allatori.xml"
        into "$buildDir/intermediates/classes/"
        expand(classesRoot: variant.javaCompileProvider.get().destinationDir,
                kotlinRoot: "${buildDir}/tmp/kotlin-classes/${variant.name}",
                androidJar: "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar",
                classpathJars: variant.javaCompileProvider.get().classpath.getAsPath(),
                logFile: "allatori-log-${variant.name}.xml")
        rename('allatori.xml', "allatori-${variant.name}.xml")
    }

    new File("${variant.javaCompileProvider.get().destinationDir}-obfuscated").deleteDir()
    javaexec {
        main = 'com.allatori.Obfuscate'
        classpath = files("$rootDir/allatori/allatori.jar")
        args "$buildDir/intermediates/classes/allatori-${variant.name}.xml"
    }

    // Kotlin support
    new File("${buildDir}/tmp/kotlin-classes/${variant.name}").deleteDir()
    new File("${buildDir}/tmp/kotlin-classes/${variant.name}-obfuscated").renameTo(new File("${buildDir}/tmp/kotlin-classes/${variant.name}"))
}

dependencies {
    compileOnly fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'de.hdodenhof:circleimageview:3.1.0'
    implementation 'com.github.goweii:AnyLayer:3.4.3-support'
    implementation "com.github.topjohnwu.libsu:core:3.0.2"
    implementation 'com.google.code.gson:gson:2.8.7'
    implementation 'com.alibaba:fastjson:1.2.78'
    implementation "androidx.core:core-ktx:1.6.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}
repositories {
    mavenCentral()
}



